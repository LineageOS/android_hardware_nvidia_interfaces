package vendor.nvidia.hardware.graphics.display@1.0;

import INvDeepISPCallback;

interface INvDisplay {
    modeGetList(
            HwcSvcDisplay display
        ) generates (
            vec<HwcSvcDisplayMode> modes
        );

    getMode(
            HwcSvcDisplay display,
            HwcSvcModeType modeType
        ) generates (
            HwcSvcDisplayMode mode
        );

    modeSet(
            HwcSvcDisplay display,
            HwcSvcDisplayMode request
        );

    modeSetIndex(
            HwcSvcDisplay display,
            uint32_t index
        );

    modeDefaultSetIndex(
            HwcSvcDisplay display,
            uint32_t index
        );

    modeDefaultCommit(
            HwcSvcDisplay display
        );

    modeDefaultRollback(
            HwcSvcDisplay display
        );

    modeDefaultStore(
            HwcSvcDisplay display
        );

    modeDefaultGet(
            HwcSvcDisplay display
        ) generates (
            uint32_t mode
        );

    modeDefaultDelete(
            HwcSvcDisplay display
        );

    modeDefaultDeleteAll(
            HwcSvcDisplay display
        );

    modeUpdate(
            HwcSvcDisplay display
        );

    modeMatchToContent(
            HwcSvcDisplay display
        );

    layerDepthPolicy(
            HwcSvcDisplay display
        );

    hdcpGetVersion(
            HwcSvcDisplay display
        ) generates (
            int32_t version
        );

    edidGetInfo(
            HwcSvcDisplay display
        ) generates (
            HwcSvcEdidInfo info
        );

    edidGetRaw(
            HwcSvcDisplay display
        ) generates (
            vec<int8_t> edid
        );

    getUnderscan(
            HwcSvcDisplay display
        ) generates (
            float underscan
        );

    setUnderscan(
            HwcSvcDisplay display,
            float underscan
        );

    getScanlineFence(
            HwcSvcDisplay display,
            HwcSvcSLFenceInfo info
        ) generates (
            int32_t ret
        );

    removeScanlineInterrupt(
            HwcSvcDisplay display,
            int32_t id
        );

    enableCrc(
            HwcSvcDisplay display,
            HwcSvcCrc crc
        ) generates (
            HwcSvcCrc ret
        );

    readCrc(
            HwcSvcDisplay display,
            HwcSvcCrc crc
        ) generates (
            HwcSvcCrc ret
        );

    getCrcFlipId(
            HwcSvcDisplay display
        ) generates (
            HwcSvcCrc id
        );

    displayGetType(
            HwcSvcDisplay display
        ) generates (
            HwcSvcDisplayType type
        );

    displayAddWindow(
            HwcSvcDisplay display
        );

    enableGsync(
            HwcSvcDisplay display,
            bool enable
        );

    getHwcProperty(
            HwcSvcProperty name
        ) generates (
            string value
        );

    setHwcProperty(
            HwcSvcProperty name,
            string value
        );

    vprSetFloor(
            uint32_t size
        );

    notifyDeepIspInputEvent(
            HwcInputEvent event,
            float val
        );

    getDeepISPState(
        ) generates (
            DeepISPFilter filter,
            DeepISPFallbackReason reason,
            bool split
        );

    registerDeepISPCallback(
            INvDeepISPCallback callback
        );

    unregisterDeepISPCallback(
        );

    allmIsSupported(
            HwcSvcDisplay display
        ) generates (
            bool value
        );

    allmEnable(
            HwcSvcDisplay display,
            bool val2
        );
};
